{"version":3,"file":"block.js","sourceRoot":"","sources":["../src/block.ts"],"names":[],"mappings":";;AAAA,yDAAkE;AAClE,yCAAmC;AAGnC;IAOE,YACE,WAAmB,EACnB,YAAgC,EAChC,SAAiB,EACjB,KAAa,EACb,SAAiB;QAEjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,yEAAyE;IAClE,MAAM;QACX,MAAM,CAAC,kBAAM,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAS,CAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;CACF;AAzBD,sBAyBC","sourcesContent":["import { serialize, deserialize } from \"serializer.ts/Serializer\";\r\nimport { sha256 } from \"js-sha256\";\r\nimport { Transaction } from \"./transaction\";\r\n\r\nexport class Block {\r\n  public blockNumber: number;\r\n  public transactions: Array<Transaction>;\r\n  public timestamp: number;\r\n  public nonce: number;\r\n  public prevBlock: string;\r\n\r\n  constructor(\r\n    blockNumber: number,\r\n    transactions: Array<Transaction>,\r\n    timestamp: number,\r\n    nonce: number,\r\n    prevBlock: string\r\n  ) {\r\n    this.blockNumber = blockNumber;\r\n    this.transactions = transactions;\r\n    this.timestamp = timestamp;\r\n    this.nonce = nonce;\r\n    this.prevBlock = prevBlock;\r\n  }\r\n\r\n  // Calculates the SHA256 of the entire block, including its transactions.\r\n  public sha256(): string {\r\n    return sha256(JSON.stringify(serialize<Block>(this)));\r\n  }\r\n}\r\n"]}